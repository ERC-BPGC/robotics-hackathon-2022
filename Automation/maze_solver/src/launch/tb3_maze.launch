<?xml version="1.0" encoding="UTF-8"?>
<launch>
	
	<arg name="x" default="-3.27" />
	<arg name="y" default="-2.46" />
	<arg name="z" default="0.0" />
	
	<!--<param name="robot_description" command="$(find xacro)/xacro--> <!--inorder '$(find omnibase_description)/xacro/main_realsense.urdf.xacro'" /> -->
	<arg name="model" default="$(env TURTLEBOT3_MODEL)" doc="model type [burger, waffle, waffle_pi]"/>
	<!--<rosparam file="$(find omnibase_control)/config/controllers.yaml" command="load"/>
	<rosparam file="$(find omnibase_control)/config/params_trot.yaml" command="load"/>

	<node pkg="tf" type="static_transform_publisher" name="laser" args="0 0 0 0 0 0 world base_link 10"/>-->

	<!-- Launch empty world Gazebo -->
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find maze_solver)/src/worlds/maze.world"/>
		<arg name="paused" value="false"/>
		<arg name="gui" value="true"/>
		<arg name="verbose" value="false"/>
	</include>	

	<!--<node name="urdf_spawner" pkg="gazebo_ros" type="spawn_model" output="screen" args="-urdf -x $(arg x) -y $(arg y) -z $(arg z) -model omnibase -param robot_description"/>-->
	<param name="robot_description" command="$(find xacro)/xacro --inorder $(find turtlebot3_description)/urdf/turtlebot3_$(arg model).urdf.xacro" />
	<node pkg="gazebo_ros" type="spawn_model" name="spawn_urdf" args="-urdf -model turtlebot3_$(arg model) -x $(arg x) -y $(arg y) -z $(arg z
	) -param robot_description" />
	<!--<node name="controller_spawner" pkg="controller_manager" type="spawner" respawn="false" output="screen" ns="/omnibase" 
	args="--><!--namespace=/omnibase
	joint_state_controller
	front_right_joint_velocity_controller
	front_left_joint_velocity_controller
	back_right_joint_velocity_controller
	back_left_joint_velocity_controller
	"/>-->
	
	<!-- <node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher" ns="omnibase"/> -->
	
	<node
		name="robot_state_publisher" pkg="robot_state_publisher" type="robot_state_publisher" respawn="false" output="screen">
		<param name="publish_frequency" type="double" value="30.0"/>
		<!--<remap from="/joint_states" to="/omnibase/joint_states"/>-->
	</node>

	<node name ="controller" pkg="omnibase_control" type="controller_node" output="screen"/> 
    <node name="path_planner" pkg="maze_solver" type="path_planner.py" output="screen"/>
    <node name="omnibase_controller" pkg="maze_solver" type="controller.py" output="screen"/>
	<node name="colour_detector" pkg="maze_solver" type="colour_detection.py" output="screen"/>

</launch>